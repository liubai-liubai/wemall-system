generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表 - 遵循规范：复数形式，小写下划线命名
model User {
  id          String   @id @default(uuid()) @map("id")          // 规范：使用UUID主键
  open_id     String   @unique @map("open_id")                  // 微信openId
  union_id    String?  @map("union_id")                         // 微信unionId  
  session_key String?  @map("session_key")                      // 微信会话密钥
  nickname    String?  @map("nickname")                         // 用户昵称
  avatar      String?  @map("avatar")                           // 头像URL
  phone       String?  @unique @map("phone")                    // 手机号
  email       String?  @unique @map("email")                    // 邮箱
  gender      Int      @default(0) @map("gender")               // 性别：0未知 1男 2女
  birthday    DateTime? @map("birthday")                        // 生日
  status      Int      @default(1) @map("status")               // 状态：1正常 0禁用
  last_login  DateTime? @map("last_login")                      // 最后登录时间
  created_at  DateTime @default(now()) @map("created_at")       // 规范：创建时间
  updated_at  DateTime @updatedAt @map("updated_at")            // 规范：更新时间

  // 关联关系
  refresh_tokens RefreshToken[]  // 用户的刷新令牌

  // 索引规范：uk_前缀唯一索引，idx_前缀普通索引
  @@unique([open_id], map: "uk_users_open_id")
  @@index([phone], map: "idx_users_phone") 
  @@index([status], map: "idx_users_status")
  @@index([created_at], map: "idx_users_created_at")
  @@map("users")                                                // 规范：表名复数形式
}

// JWT刷新令牌表
model RefreshToken {
  id         String   @id @default(uuid()) @map("id")
  user_id    String   @map("user_id")
  token      String   @map("token") @db.Text                    // 完整的JWT token
  token_hash String   @unique @map("token_hash") @db.VarChar(64) // token的SHA256哈希值，用于唯一索引
  expires_at DateTime @map("expires_at")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  // 外键关联
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id], map: "idx_refresh_tokens_user_id")
  @@index([expires_at], map: "idx_refresh_tokens_expires_at")
  @@map("refresh_tokens")
}
